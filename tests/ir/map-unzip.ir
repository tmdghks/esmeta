def unzip(map: Map[Math -> String]) = {
  let keys = (keys map)[#1]
  let ckeys = (copy keys)[#1]
  let values = (list [])[#1]
  while (! (= (sizeof ckeys) 0)) {
    pop key < ckeys
    let value = map[key]
    push value > values
  }
  let pair = (list [keys, values])[#1]
  return pair
}

@main def main() = {
  let map = (map [Math | BigInt | Number, String] { 1 -> "a", 2n -> "b", 0.3f -> "c" })[#1]
  call pair = clo<"unzip">(map)
  assert (contains pair[0] 1)
  assert (contains pair[0] 2n)
  assert (contains pair[0] 0.3f)
  assert (contains pair[1] "a")
  assert (contains pair[1] "b")
  assert (contains pair[1] "c")
}
