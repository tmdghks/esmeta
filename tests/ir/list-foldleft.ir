def foldleft(init: Math, list: List[Math], f: Clo) = {
  if (= (sizeof list) 0) %0 = init
  else {
    pop hd < list
    call newinit = f(init, hd)
    call %0 = clo<"foldleft">(newinit, list, f)
  }
  return %0
}

def add(i: Math, j: Math) = {
  return (+ i j)
}

@main def main() = {
  let list = (list [1, 2, 3, 4, 5])[#1]
  call sum = clo<"foldleft">(0, list, clo<"add">)
  assert (= sum 15)
}
