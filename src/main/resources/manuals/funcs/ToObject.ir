def ToObject(
  argument: ESValue,
): Normal[Record[Object]] | Abrupt[throw] = {
  if (= (typeof argument) @Undefined) {
    call %0 = clo<"__NEW_ERROR_OBJ__">("%TypeError.prototype%")
    call %1 = clo<"ThrowCompletion">(%0)
    return %1
  }
  if (= (typeof argument) @Null) {
    call %2 = clo<"__NEW_ERROR_OBJ__">("%TypeError.prototype%")
    call %3 = clo<"ThrowCompletion">(%2)
    return %3
  }
  if (= (typeof argument) @Boolean) {
    call %4 = clo<"NormalCompletion">((record [OrdinaryObject] {
      "Prototype" : @EXECUTION_STACK[0].Realm.Intrinsics["%Boolean.prototype%"],
      "BooleanData" : argument,
      "Extensible" : true,
      "__MAP__" : (map),
      "PrivateElements" : (list []),
    }))
    return %4
  }
  if (= (typeof argument) @Number) {
    call %5 = clo<"NormalCompletion">((record [OrdinaryObject] {
      "Prototype" : @EXECUTION_STACK[0].Realm.Intrinsics["%Number.prototype%"],
      "NumberData" : argument,
      "Extensible" : true,
      "__MAP__" : (map),
      "PrivateElements" : (list []),
    }))
    return %5
  }
  if (= (typeof argument) @String) {
    call %6 = clo<"NormalCompletion">((record [StringExoticObject] {
      "Prototype" : @EXECUTION_STACK[0].Realm.Intrinsics["%String.prototype%"],
      "StringData" : argument,
      "Extensible" : true,
      "__MAP__" : (map {
        "length" -> (record [PropertyDescriptor] {
          "Value" : ([number] (sizeof argument)),
          "Writable" : false,
          "Enumerable" : false,
          "Configurable" : false,
        }),
      }),
      "PrivateElements" : (list []),
    }))
    return %6
  }
  if (= (typeof argument) @Symbol) {
    call %7 = clo<"NormalCompletion">((record [OrdinaryObject] {
      "Prototype" : @EXECUTION_STACK[0].Realm.Intrinsics["%Symbol.prototype%"],
      "SymbolData" : argument,
      "Extensible" : true,
      "__MAP__" : (map),
      "PrivateElements" : (list []),
    }))
    return %7
  }
  if (= (typeof argument) @BigInt) {
    call %8 = clo<"NormalCompletion">((record [OrdinaryObject] {
      "Prototype" : @EXECUTION_STACK[0].Realm.Intrinsics["%BigInt.prototype%"],
      "BigIntData" : argument,
      "Extensible" : true,
      "__MAP__" : (map),
      "PrivateElements" : (list []),
    }))
    return %8
  }
  if (= (typeof argument) @Object) {
    call %9 = clo<"NormalCompletion">(argument)
    return %9
  }
  assert false
}
